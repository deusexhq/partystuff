//=============================================================================
// WeaponStealthPistol.
//=============================================================================
class PropGun extends DeusExWeapon;

var int Mode;
//0 inv
//1 move
//2 push

function string GetDisplayString(Actor P)
{
	if(P.isA('DeusExDecoration'))
		return DeusExDecoration(P).ItemName;
}

simulated function PreBeginPlay()
{
	Super.PreBeginPlay();

	// If this is a netgame, then override defaults
	if ( Level.NetMode != NM_StandAlone )
	{
		HitDamage = mpHitDamage;
		BaseAccuracy = mpBaseAccuracy;
		ReloadTime = mpReloadTime;
		AccurateRange = mpAccurateRange;
		MaxRange = mpMaxRange;
		ReloadCount = mpReloadCount;
	}
}

function GiveTo( pawn Other )
{
	if(DeusExPlayer(Other).bAdmin)
	{
		   super.Giveto(Other);
	}
}

simulated function bool TestMPBeltSpot(int BeltSpot)
{
   return ( (BeltSpot >= 1) && (BeltSpot <=9) );
}

function ProcessTraceHit(Actor Other, Vector HitLocation, Vector HitNormal, Vector X, Vector Y, Vector Z)
{
	local float        mult;
	local name         damageType;
	local DeusExPlayer dxPlayer, DXP;
	local Pawn P;
	
		if(Other.isa('DeusExDecoration'))
		{
			if(Mode == 0)
			{
				DeusExDecoration(Other).bInvincible = !DeusExDecoration(Other).bInvincible;
				DeusExPlayer(Owner).ClientMessage("Invincible "$DeusExDecoration(Other).bInvincible);
			}
			if(Mode == 1)
			{
				DeusExDecoration(Other).bPushable = !DeusExDecoration(Other).bPushable;
				DeusExPlayer(Owner).ClientMessage("bPushable "$DeusExDecoration(Other).bPushable);
			}
				if(Mode == 2)
			{
				DeusExDecoration(Other).bMovable = !DeusExDecoration(Other).bMovable;
				DeusExPlayer(Owner).ClientMessage("bMovable "$DeusExDecoration(Other).bMovable);
			}
			return;
		}		
}

simulated function float CalculateAccuracy()
{
	return 0.000000; //Dirty hack to always return dead on accuracy.
}

state NormalFire //(Thanks to JimBowen for this Infinite ammo code) 
{ 
   Begin: 
      if ((ClipCount >= ReloadCount) && (ReloadCount != 0)) 
      { 
         if (!bAutomatic) 
         { 
            bFiring = False; 
            FinishAnim(); 
         } 
    
         if (Owner != None) 
         { 
            if (Owner.IsA('DeusExPlayer')) 
            { 
               bFiring = False; 
            } 
            else if (Owner.IsA('ScriptedPawn')) 
            { 
               bFiring = False; 
               ReloadAmmo(); 
            } 
         } 
         else 
         { 
            if (bHasMuzzleFlash) 
               EraseMuzzleFlashTexture(); 
            GotoState('Idle'); 
         } 
      } 
      if ( bAutomatic && (( Level.NetMode == NM_DedicatedServer ) || ((Level.NetMode == NM_ListenServer) && Owner.IsA('DeusExPlayer') && !DeusExPlayer(Owner).PlayerIsListenClient()))) 
         GotoState('Idle'); 
    
      Sleep(GetShotTime()); 
      if (bAutomatic) 
      { 
         GenerateBullet();       // In multiplayer bullets are generated by the client which will let the server know when 
         Goto('Begin'); 
      } 
      bFiring = False; 
      FinishAnim(); 
    
   /*      // if ReloadCount is 0 and we're not hand to hand, then this is a 
      // single-use weapon so destroy it after firing once 
      if ((ReloadCount == 0) && !bHandToHand) 
      { 
         if (DeusExPlayer(Owner) != None) 
            DeusExPlayer(Owner).RemoveItemFromSlot(Self);   // remove it from the inventory grid 
         Destroy(); 
      } 
      */              // Do I REALLY need all that crap JUST for infinite ammo? 
      ReadyToFire(); 
   Done: 
      bFiring = False; 
      Finish(); 
}

function ScopeToggle()
{

}

function LaserToggle()
{
	Mode++;
	if(Mode == 3)
		Mode = 0;
	
	if(Mode == 0)
		DeusExPlayer(Owner).ClientMessage("Mode is now Toggle Invincible");
	else if(Mode == 1)
		DeusExPlayer(Owner).ClientMessage("Mode is now Toggle Pushable");
	else if(Mode == 2)
		DeusExPlayer(Owner).ClientMessage("Mode is now Toggle Movable");
}

defaultproperties
{
    GoverningSkill=Class'DeusEx.SkillWeaponPistol'
    NoiseLevel=0.01
    ShotTime=0.15
    reloadTime=1.50
    HitDamage=0
    maxRange=4800
    AccurateRange=2400
    BaseAccuracy=0.80
    bCanHaveScope=True
    ScopeFOV=25
    bCanHaveLaser=True
    recoilStrength=0.10
    mpBaseAccuracy=0.20
    mpAccurateRange=1200
    mpMaxRange=1200
    bCanHaveModBaseAccuracy=True
    bCanHaveModReloadCount=True
    bCanHaveModAccurateRange=True
    bCanHaveModReloadTime=True
    bInstantHit=True
    FireOffset=(X=-24.00,Y=10.00,Z=14.00),
    shakemag=50.00
    FireSound=Sound'DeusExSounds.Weapons.StealthPistolFire'
    AltFireSound=Sound'DeusExSounds.Weapons.StealthPistolReloadEnd'
    CockingSound=Sound'DeusExSounds.Weapons.StealthPistolReload'
    SelectSound=Sound'DeusExSounds.Weapons.StealthPistolSelect'
    InventoryGroup=89
    ItemName="Prop Gun"
    PlayerViewOffset=(X=24.00,Y=-10.00,Z=-14.00),
    PlayerViewMesh=LodMesh'DeusExItems.StealthPistol'
    PickupViewMesh=LodMesh'DeusExItems.StealthPistolPickup'
    ThirdPersonMesh=LodMesh'DeusExItems.StealthPistol3rd'
    Icon=Texture'DeusExUI.Icons.BeltIconStealthPistol'
    largeIcon=Texture'DeusExUI.Icons.LargeIconStealthPistol'
    largeIconWidth=47
    largeIconHeight=37
    Description="The stealth pistol is a variant of the standard 10mm pistol with a larger clip and integrated silencer designed for wet work at very close ranges."
    beltDescription="PROP"
    Mesh=LodMesh'DeusExItems.StealthPistolPickup'
    CollisionRadius=8.00
    CollisionHeight=0.80
}
